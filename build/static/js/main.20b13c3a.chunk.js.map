{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","utils/getGifs.js","hooks/useFetchGifs.js","components/GifGrid.js","GiftExpertApp.js","index.js"],"names":["AddCategory","updateCategoryHandler","useState","inputValue","setInputValue","onSubmit","e","preventDefault","length","type","value","onChange","target","GifGridItem","title","url","className","src","alt","getGifs","a","category","apiKey","limit","fetch","response","json","responseJSON","images","data","map","id","downsized_medium","console","log","useFetchGifs","state","setstate","useEffect","process","gifList","fetchData","GifGrid","imageList","img","GiftExpertApp","categories","setCategories","lastValue","ReactDOM","render","document","getElementById"],"mappings":"2QA6BeA,EA1BY,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,sBAC5B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACE,sBAAMC,SATkB,SAACC,GACzBA,EAAEC,iBACEJ,EAAWK,OAAS,IACtBP,EAAsBE,GACtBC,EAAc,MAKhB,SACE,uBAAOK,KAAK,OAAOC,MAAOP,EAAYQ,SAdjB,SAACL,GACxBF,EAAcE,EAAEM,OAAOF,a,mBCMZG,MATf,YAAoC,IAAdC,EAAa,EAAbA,MAAOC,EAAM,EAANA,IAC3B,OACE,sBAAKC,UAAU,yCAAf,UACE,qBAAKC,IAAKF,EAAKG,IAAKJ,IACpB,4BAAIA,Q,uBCRGK,EAAO,uCAAG,oDAAAC,EAAA,6DAAOC,EAAP,+BAAgB,GAAIC,EAApB,+BAA2B,GAAIC,EAA/B,+BAAqC,GACpDR,EADe,iDACiCM,EADjC,kBACmDE,EADnD,oBACoED,GADpE,kBAGIE,MAAMT,GAHV,cAGbU,EAHa,iBAIQA,EAASC,OAJjB,eAIbC,EAJa,OAKbC,EAASD,EAAaE,KAAKC,KAAI,SAACD,GACpC,MAAO,CACLE,GAAIF,EAAKE,GACTjB,MAAOe,EAAKf,MACZC,IAAKc,EAAKD,OAAOI,iBAAiBjB,QATnB,kBAYZa,GAZY,kCAcnBK,QAAQC,IAAI,uBAAZ,MAdmB,0DAAH,qDCwBLC,MArBf,SAAsBd,GACpB,MAA0BnB,mBAAS,CACjC2B,KAAM,KADR,mBAAOO,EAAP,KAAcC,EAAd,KAiBA,OAbAC,qBAAU,WAAM,4CACd,4BAAAlB,EAAA,sEACwBD,EACpBE,EACAkB,mCACA,IAJJ,OACQC,EADR,OAMEH,EAAS,CACPR,KAAMW,IAPV,4CADc,uBAAC,WAAD,wBAWdC,KACC,CAACpB,IACGe,GCFMM,G,MAdC,SAAC,GAAkB,IAAhBrB,EAAe,EAAfA,SACHsB,EAAcR,EAAad,GAAjCQ,KACR,OACE,gCACE,6BAAKR,IACL,qBAAKL,UAAU,iDAAf,SACG2B,EAAUb,KAAI,SAACc,GACd,OAAO,cAAC,EAAD,eAA8BA,GAAZA,EAAIb,cCiBxBc,MA1Bf,WACE,MAAoC3C,mBAAS,CAC3C,SADF,mBAAO4C,EAAP,KAAmBC,EAAnB,KAUA,OACE,qCACE,gDACA,cAAC,EAAD,CAAa9C,sBATG,WAAoB,IAAnBoB,EAAkB,uDAAP,GAC9B0B,GAAc,SAACC,GACb,MAAM,CAAE3B,GAAR,mBAAqB2B,UAQrB,uBAEA,6BACGF,EAAWhB,KAAI,SAACT,GACf,OAAO,cAAC,EAAD,CAAwBA,SAAUA,GAApBA,Y,MCjB/B4B,IAASC,OAAO,cAAC,EAAD,IAAmBC,SAASC,eAAe,W","file":"static/js/main.20b13c3a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./AddCategory.css\";\nexport const AddCategory = ({ updateCategoryHandler }) => {\n  const [inputValue, setInputValue] = useState(\"\");\n\n  const userInputHandler = (e) => {\n    setInputValue(e.target.value);\n  };\n\n  const submitFormHandler = (e) => {\n    e.preventDefault();\n    if (inputValue.length > 2) {\n      updateCategoryHandler(inputValue);\n      setInputValue(\"\");\n    }\n  };\n\n  return (\n    <form onSubmit={submitFormHandler}>\n      <input type=\"text\" value={inputValue} onChange={userInputHandler}></input>\n    </form>\n  );\n};\n\nAddCategory.propTypes = {\n  updateCategoryHandler: PropTypes.func.isRequired,\n};\n\nexport default AddCategory;\n","import React from \"react\";\nimport 'animate.css';\nimport \"./GifGridItem.css\"\n\nfunction GifGridItem({title, url}) {\n  return (\n    <div className=\"card animate__animated animate__fadeIn\">\n      <img src={url} alt={title} />\n      <p>{title}</p>\n    </div>\n  );\n}\n\nexport default GifGridItem;\n","export const getGifs = async (category=\"\", apiKey=\"\", limit=20) => {\n  const url = `https://api.giphy.com/v1/gifs/search?q=${category}&limit=${limit}&api_key=${apiKey}`;\n  try {\n    const response = await fetch(url);\n    const responseJSON = await response.json();\n    const images = responseJSON.data.map((data) => {\n      return {\n        id: data.id,\n        title: data.title,\n        url: data.images.downsized_medium.url,\n      };\n    });\n    return images;\n  } catch (err) {\n    console.log(\"Fetching Gifs Failed\", err);\n  }\n};\n","import { useState, useEffect } from \"react\";\nimport { getGifs } from \"../utils/getGifs\";\n\nfunction useFetchGifs(category) {\n  const [state, setstate] = useState({\n    data: []\n  });\n\n  useEffect(() => {\n    async function fetchData() {\n      const gifList = await getGifs(\n        category,\n        process.env.REACT_APP_GIPHY_KEY,\n        10\n      );\n      setstate({\n        data: gifList\n      });\n    }\n    fetchData();\n  }, [category]);\n  return state;\n}\n\nexport default useFetchGifs;\n","import React, { useState, useEffect } from \"react\";\nimport GifGridItem from \"./GifGridItem\";\nimport useFetchGifs from \"../hooks/useFetchGifs\";\nimport 'animate.css';\nimport \"./GifGrid.css\";\nconst GifGrid = ({ category }) => {\n  const { data: imageList } = useFetchGifs(category);\n  return (\n    <div>\n      <h2>{category}</h2>\n      <div className=\"container  animate__animated animate__animated\">\n        {imageList.map((img) => {\n          return <GifGridItem key={img.id} {...img} />;\n        })}\n      </div>\n    </div>\n  );\n};\n\nexport default GifGrid;\n","import React, { useState } from \"react\";\nimport AddCategory from \"./components/AddCategory\";\nimport GifGrid from \"./components/GifGrid\";\nfunction GiftExpertApp() {\n  const [categories, setCategories] = useState([\n    \"Goku\"\n  ]);\n\n  const addCategory = (category = \"\") => {\n    setCategories((lastValue) => {\n      return [category, ...lastValue];\n    });\n  };\n\n  return (\n    <>\n      <h2>Gif Expert App</h2>\n      <AddCategory updateCategoryHandler={addCategory} />\n      <hr />\n\n      <ul>\n        {categories.map((category) => {\n          return <GifGrid key={category} category={category}/>;\n        })}\n      </ul>\n    </>\n  );\n}\n\nexport default GiftExpertApp;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport GiftExpertApp from \"./GiftExpertApp\";\nimport \"./index.css\";\n\nReactDOM.render(<GiftExpertApp />, document.getElementById(\"root\"));\n"],"sourceRoot":""}